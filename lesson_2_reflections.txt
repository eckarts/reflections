What happens when you initialize a repository?  Why do you need to do it?

	When git is initialized it creates a store to capture commit history and versions.
	
How is the staging area different from the working directory and the repository?  What value do you think it offers?

	The staging area alows you to "set aside" a file that you want to commit but don't want
	to commit until you have all the files together to be completed in the single commit.  It
	also allows you to reset and remove files from the staging area if you decide additonal
	changes are required before making the commit.
	
What needs to happen to set up a default git editor?

	At command line:
		git config —global core.editor “open —W -n”
		git config —global push.default upstream
		git config —global merge.conflictstyle diff3

How can you see the staging area to make sure you have one commit per logical change?

	You can set aside a version that you had made a logical change to and
	continue with the next logical change on the version in your working
	directory.

What are some situations when branches would be helpful in keeping our history organized?  How would branches help?

	Branches provide a means of testing new functionality without impacting
	a functioning version. Branches also provide a means of using existing
	code as a means of veering off into a new direction while still being able
	to maintain the branch with the original objectives.

How do the diagrams help you visualize the branch structure?

	Clearly represents the parenting of each commit and the paraent commit that
	the branches are spawned off of.