When would you want to create a remote repository rather than keeping all your work local?
  > When wanting to access work from multiple computers
  > When wanting to share access and work with multiple users
  > When wanting to backup work in case of loss of local store

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?
  > To control if and when the update occurs to protect the working copy and the original copy from changes before you are ready to commit to the sync

Describe the differences between forks, clones, and branches.  When would you use one instead of another?
	> Clone - creates a copy of a repository
	> Fork - creates a copy of a repository on GitHub with reference to the original author
	> Branch - creates a version of the master for functional changes without altering or impacting the master

What is the benefit of having a copy of the last known state of the remote stored locally?
	> Understand the status of the remote when working offline on the repository

How would you collaborate without using Git or GitHub?  What would be easier, and what would be harder?
	> collaboration w/o GitHub -> central file storage with a git repository, a lot of emails, voice mails, or vid/conf calls
	> easier - understanding logic and reasoning behind proposed changes
	> harder - managing a large number of changes




